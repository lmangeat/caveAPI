{
  "swagger": "2.0",
  "info": {
    "title": "caveAPI",
    "description": "...",
    "version": "1.0.0"
  },
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "User",
      "description": "account"
    },
    {
      "name": "Cave",
      "description": ""
    }
  ],
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "basePath": "/",
  "paths": {
    "/users": {
      "get": {
        "x-swagger-router-controller": "UserController",
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Gets `User` objects.\nOptional query param of **size** determines\nsize of returned array\n",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of array",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Users",
            "schema": {
              "title": "ArrayOfUsers",
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/getOne/username/{username}": {
      "get": {
        "x-swagger-router-controller": "UserController",
        "operationId": "getUserByUserName",
        "tags": [
          "User"
        ],
        "summary": "Get user by username",
        "description": "Gets `User` object by username.",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Username to search for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 'User' object.",
            "schema": {
              "title": "Retrieved User object",
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/getOne/email/{email}": {
      "get": {
        "x-swagger-router-controller": "UserController",
        "operationId": "getUserByEmail",
        "tags": [
          "User"
        ],
        "summary": "Get user by username",
        "description": "Gets `User` object by username.",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "path",
            "description": "Username to search for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 'User' object.",
            "schema": {
              "title": "Retrieved User object",
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "x-swagger-router-controller": "UserController",
        "operationId": "createUser",
        "tags": [
          "User"
        ],
        "summary": "Adds a new user",
        "description": "Adds new `User` object to the DB.",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Username string",
            "required": true,
            "type": "string"
          },{
            "name": "email",
            "in": "formData",
            "description": "Username string",
            "required": true,
            "type": "string"
          },{
            "name": "password",
            "in": "formData",
            "description": "Username string",
            "required": true,
            "type": "string"
          },{
            "name": "checkpassword",
            "in": "formData",
            "description": "Username string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully added to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/delete/username/{username}": {
      "delete": {
        "x-swagger-router-controller": "UserController",
        "operationId": "deleteByUserName",
        "tags": [
          "User"
        ],
        "summary": "Delete a user by username",
        "description": "Delete a user by his username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully deleted to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/delete/email/{email}": {
      "delete": {
        "x-swagger-router-controller": "UserController",
        "operationId": "deleteByEmail",
        "tags": [
          "User"
        ],
        "summary": "Delete a user by email",
        "description": "Delete a user by his email address",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully deleted to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/delete/id/{id}": {
      "delete": {
        "x-swagger-router-controller": "UserController",
        "operationId": "deleteById",
        "tags": [
          "User"
        ],
        "summary": "Delete a user by id",
        "description": "Delete a user by his id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully deleted to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/update/username/id/{id}": {
      "put": {
        "x-swagger-router-controller": "UserController",
        "operationId": "updateUsername",
        "tags": [
          "User"
        ],
        "summary": "Update user's username",
        "description": "Update the user's username by his id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "New user's username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully modified to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/update/email/id/{id}": {
      "put": {
        "x-swagger-router-controller": "UserController",
        "operationId": "updateEmail",
        "tags": [
          "User"
        ],
        "summary": "Update user's email",
        "description": "Update the user's email by his id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "New user's email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully modified to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/update/password/id/{id}": {
      "put": {
        "x-swagger-router-controller": "UserController",
        "operationId": "updatePassword",
        "tags": [
          "User"
        ],
        "summary": "Update user's password",
        "description": "Update the user's password by his id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "New user's password",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkpassword",
            "in": "formData",
            "description": "New user's password copy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully modified to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/update/admin/id/{id}": {
      "put": {
        "x-swagger-router-controller": "UserController",
        "operationId": "updateAdmin",
        "tags": [
          "User"
        ],
        "summary": "Update user's admin",
        "description": "Update the user's admin by his id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          },
          {
            "name": "admin",
            "in": "formData",
            "description": "User's admin string boolean",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully modified to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/caves/id/{id}": {
      "get": {
        "x-swagger-router-controller": "UserController",
        "operationId": "getAllCaves",
        "tags": [
          "User"
        ],
        "summary": "Gets all user's caves",
        "description": "Gets all user's caves by user's id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully modified to the DB"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/caves": {
      "get": {
        "x-swagger-router-controller": "CaveController",
        "operationId": "getCaves",
        "tags": [
          "Cave"
        ],
        "summary": "Get all caves",
        "description": "Gets `Cave` objects.\nOptional query param of **size** determines\nsize of returned array\n",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of array",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Caves",
            "schema": {
              "title": "ArrayOfCaves",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cave"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/caves/user/{id}": {
      "get": {
        "x-swagger-router-controller": "CaveController",
        "operationId": "getUserCaves",
        "tags": [
          "Cave"
        ],
        "summary": "Get user's caves",
        "description": "Gets `Cave` objects.",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Caves",
            "schema": {
              "title": "ArrayOfCaves",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cave"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/caves/create/user/{id}": {
      "post": {
        "x-swagger-router-controller": "CaveController",
        "operationId": "createCave",
        "tags": [
          "Cave"
        ],
        "summary": "Create new cave",
        "description": "Create a new cave for a user",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 'Cave' object.",
            "schema": {
              "title": "Retrieved Cave object",
              "type": "object",
              "$ref": "#/definitions/Cave"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/caves/delete/id/{id}": {
      "delete": {
        "x-swagger-router-controller": "CaveController",
        "operationId": "deleteCaveById",
        "tags": [
          "Cave"
        ],
        "summary": "Delete cave",
        "description": "Create the cave with id : 'id'",
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": "token",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 'Cave' object.",
            "schema": {
              "title": "Retrieved the deleted Cave object",
              "type": "object",
              "$ref": "#/definitions/Cave"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }

  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "caves": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cave"
          }
        },
        "admin": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date"
        },
        "updated_at": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Cave":{
      "type": "object",
      "properties":{
        "rows":{
          "type": "array",
          "items":{
            "$ref": "#/definitions/Row"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date"
        },
        "updated_at": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Row":{
      "type": "object",
      "properties":{
        "bottles":{
          "type": "array",
          "items":{
            "$ref": "#/definitions/Bottle"
          }
        },
        "nbMaxBottles": {
          "type": "number"
        },
        "created_at": {
          "type": "string",
          "format": "date"
        },
        "updated_at": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Bottle":{
      "type": "object",
      "properties":{
        "vineyard":{
          "type": "string"
        },
        "color":{
          "type": "string"
        },
        "type":{
          "type": "string"
        },
        "year":{
          "type": "number"
        },
        "conservation":{
          "type": "number"
        },
        "name":{
          "type": "string"
        },
        "position":{
          "type": "number"
        },
        "created_at": {
          "type": "string",
          "format": "date"
        },
        "updated_at": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "AuthRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}